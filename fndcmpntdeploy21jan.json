{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "outputs": {
    "workspace": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Databricks/workspaces', parameters('workspaceName_databricks')))]"
    }
  },
  "parameters": {
    "workspaceName_databricks": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Databricks workspace to create."
      }
    },
    "pricingTier_databricks": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "standard",
        "premium"
      ],
      "metadata": {
        "description": "The pricing tier of workspace."
      }
    },
    "vnetAddressPrefix_databricks": {
      "type": "string",
      "defaultValue": "10.139",
      "metadata": {
        "description": "The first 2 octets of the virtual network /16 address range (e.g., '10.139' for the address range 10.139.0.0/16)."
      }
    },
    "location_databricks": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "name_adf": {
      "type": "string",
      "defaultValue": "myv2datafactory"
    },
    "location_adf": {
      "type": "string",
      "defaultValue": "East US"
    },
    "apiVersion_adf": {
      "type": "string",
      "defaultValue": "2018-06-01"
    },
    "accountName_adls": {
      "type": "string",
      "metadata": {
        "description": "The name of the Data Lake Store account to create."
      }
    },
    "location_adls": {
      "type": "string",
      "allowedValues": [
        "East US 2",
        "Central US",
        "North Europe",
        "West Europe"
      ],
      "defaultValue": "East US 2",
      "metadata": {
        "description": "The location in which to create the Data Lake Store account."
      }
    },
    "logicAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the logic app to create."
      }
    },
    "testUri": {
      "type": "string",
      "defaultValue": "http://azure.microsoft.com/en-us/status/feed/",
      "metadata": {
        "description": "A test URI"
      }
    },
    "location_logicapp": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "namespaceName_eventhub": {
      "type": "string",
      "metadata": {
        "description": "Name of EventHub namespace"
      }
    },
    "eventhubSku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
      }
    },
    "skuCapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        4
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "MessagingUnits for premium namespace"
      }
    },
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of Event Hub"
      }
    },
    "consumerGroupName_eventhub": {
      "type": "string",
      "metadata": {
        "description": "Name of Consumer Group"
      }
    },
    "location_eventhub": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Databricks/workspaces",
      "name": "[parameters('workspaceName_databricks')]",
      "location": "[parameters('location_databricks')]",
      "apiVersion": "2018-04-01",
      "sku": {
        "name": "[parameters('pricingTier_databricks')]"
      },
      "properties": {
        "ManagedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
        "parameters": {
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix_databricks')]"
          }
        }
      }
    },
    {
      "apiVersion": "[parameters('apiVersion_adf')]",
      "name": "[parameters('name_adf')]",
      "location": "[parameters('location_adf')]",
      "type": "Microsoft.DataFactory/factories",
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.DataLakeStore/accounts",
      "name": "[parameters('accountName_adls')]",
      "location": "[parameters('location_adls')]",
      "apiVersion": "2016-11-01",
      "properties": {
        "newTier": "Consumption",
        "encryptionState": "Enabled",
        "encryptionConfig": {
          "type": "ServiceManaged"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location_logicapp')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "testUri": {
              "type": "string",
              "defaultValue": "[parameters('testUri')]"
            }
          },
          "triggers": {
            "recurrence": {
              "type": "recurrence",
              "recurrence": {
                "frequency": "Hour",
                "interval": 1
              }
            }
          },
          "actions": {
            "http": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "@parameters('testUri')"
              },
              "runAfter": {
                
              }
            }
          },
          "outputs": {
            
          }
        },
        "parameters": {
          
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[parameters('namespaceName_eventhub')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[parameters('location_eventhub')]",
      "sku": {
        "name": "[parameters('eventhubSku')]",
        "tier": "[parameters('eventhubSku')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "tags": {
        "tag1": "value1",
        "tag2": "value2"
      },
      "properties": {
        
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('eventHubName')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName_eventhub'))]"
          ],
          "properties": {
            
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "[parameters('consumerGroupName_eventhub')]",
              "type": "ConsumerGroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ],
              "properties": {
                "userMetadata": "User Metadata goes here"
              }
            }
          ]
        }
      ]
    }
  ],
  "variables": {
    "managedResourceGroupName": "[concat('databricks-rg-', parameters('workspaceName_databricks'), '-', uniqueString(parameters('workspaceName_databricks'), resourceGroup().id))]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaceName_eventhub'), variables('defaultSASKeyName'))]"
  }
}
